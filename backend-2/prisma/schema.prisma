// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User{
  id Int @id @default(autoincrement())
  name String
  email String @unique
  password String
  userBooking UserBooking[]
  reviews Reviews[]
}

model Turf{
  id Int @id @default(autoincrement())
  turfName String 
  area String
  city String
  likes Int @default(0)
  state String
  turfslot TurfSlot[]
  userbooking UserBooking[]
  adminId Int
  admin adminDetails @relation(fields: [adminId],references: [Id],onDelete: Cascade)
  review Reviews[]
}

model Reviews{
  id Int @id @default(autoincrement())
  description String
  like Int
  turfId Int
  userId Int
  turfs Turf @relation(fields: [turfId],references: [id],onDelete: Cascade)
  users User @relation(fields: [userId],references: [id],onDelete: Cascade)
}

model TurfSlot{
  id Int @id @default(autoincrement())
  date String
  timeSlots String
  available Boolean @default(true)
  turfId Int 
  price Int @default(500)
  turf Turf @relation(fields: [turfId],references: [id],onDelete: Cascade)
}

model UserBooking{
  id Int @id @default(autoincrement())
  turfId Int
  userId Int
  date String
  slot String
  price Int @default(500)
  paid Boolean @default(false)
  user  User @relation(fields: [userId],references: [id],onDelete: Cascade)
  turf Turf @relation(fields: [turfId],references: [id],onDelete: Cascade)

}


model adminDetails{
  Id Int @id @default(autoincrement())
  name String
  emailId String @unique
  contact String
  password String
  turfs Turf[]
}





